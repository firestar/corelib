buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

// Plugin to use the settings.xml for authentication
plugins {
    id 'net.linguica.maven-settings' version '0.5'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'

version = mod_version
group = mod_packagename
archivesBaseName = mod_id

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: mappings_version

    runs {
        client {
            workingDirectory project.file('run').canonicalPath
            property 'forge.logging.console.level', 'debug'
            args = ['--username', 'henkelmax']
            source sourceSets.main
            mods {
                mod_id {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run/server').canonicalPath
            property 'forge.logging.console.level', 'debug'
            source sourceSets.main
            mods {
                mod_id {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/')
            mods {
                mod_id {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mod_minecraft_version}-${forge_version}"

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'

}

jar {
    manifest {
        attributes(["Specification-Title"     : mod_name,
                    "Specification-Vendor"    : mod_vendor,
                    "Specification-Version"   : "1",
                    "Implementation-Title"    : mod_name,
                    "Implementation-Version"  : mod_version,
                    "Implementation-Vendor"   : mod_vendor,
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.toml'

        expand 'mod_id': mod_id, 'mod_version': mod_version, 'mod_vendor': mod_vendor, 'mod_name': mod_name,
                'mod_forge_version': mod_forge_version, 'mod_minecraft_version': mod_minecraft_version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.toml'
    }
}

jar.finalizedBy('reobfJar')

task apiJar(type: Jar) {
    classifier = 'api'
    from sourceSets.main.output
    exclude 'de/maxhenkel/corelib/dev'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

javadoc {
    failOnError = false
}

artifacts {
    archives jar
    archives apiJar
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact apiJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            name = 'henkelmax.public'
            url = 'https://maven.maxhenkel.de/repository/public'
        }
    }
}
